/*
 
    Copyright (C)    2005 Joao F. (joaof@sourceforge.net)
                     http://paccman.sourceforge.net
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
 */

package org.paccman.ui.transactions.split;

import java.math.BigDecimal;
import java.text.ParseException;
import java.util.Collection;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.paccman.controller.CategoryBaseController;
import org.paccman.controller.ControllerManager;
import org.paccman.paccman.SplitTransaction;
import org.paccman.ui.main.Main;
import org.paccman.ui.transactions.CategorySelectorComboModel;
import org.paccman.ui.transactions.TransactionFormPanel;
import org.paccman.ui.transactions.TransactionFormTab;
import static org.paccman.ui.main.ContextMain.*;

public class SplitForm extends JPanel implements ListSelectionListener {
    
    /**
     * Creates new form SplitForm
     */
    public SplitForm() {
        initComponents();
        initMyComponents();
        setEditMode(false);
    }
    
    TransactionFormPanel transactionFormPanel;
    public void setTransactionFormPanel(TransactionFormPanel transactionFormPanel) {
        this.transactionFormPanel = transactionFormPanel;
    }
    public void setData(BigDecimal totalAmount, Collection<SplitTransaction> inputSplitTransactions) {
        // Total amount value
        paymentTotal = totalAmount;
        totalEdt.setValue(paymentTotal);
        
        // Add split transactions to the split table model
        currentTotal = BigDecimal.ZERO;
        SplitTableModel stm = (SplitTableModel)splitTable.getModel();
        stm.getSplitTransactions().clear();
        for (SplitTransaction st: inputSplitTransactions) {
            stm.addSplitTransaction((CategoryBaseController) ControllerManager.getController(st.getCategory()), st.getAmount(),
                    st.getNote(), false);
            currentTotal = currentTotal.add(st.getAmount());
        }
        stm.fireTableDataChanged();
        
        // Current balance
        currentEdt.setValue(currentTotal);
        
        // Difference
        differenceEdt.setValue(totalAmount.subtract(currentTotal));
        
    }
    
    public void getData(Collection<SplitTransaction> splitTransactions) {
        splitTransactions.clear();
        SplitTableModel stm = (SplitTableModel)splitTable.getModel();
        for (SplitTransaction st: stm.getSplitTransactions()) {
            splitTransactions.add(st);
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jSplitPane1 = new javax.swing.JSplitPane();
        splitsPanel = new javax.swing.JPanel();
        splitTableScrollPane = new javax.swing.JScrollPane();
        splitForm = new javax.swing.JPanel();
        splitDataForm = new javax.swing.JPanel();
        categoryLbl = new javax.swing.JLabel();
        categoryCmb = new org.paccman.ui.transactions.split.CategorySelectorComboBox();
        amountLbl = new javax.swing.JLabel();
        amountEdt = new org.paccman.ui.common.AmountTextField();
        noteLbl = new javax.swing.JLabel();
        noteEdt = new javax.swing.JTextField();
        addPanel = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        deleteBtn = new javax.swing.JButton();
        statusPane = new javax.swing.JPanel();
        statusDataPane = new javax.swing.JPanel();
        totalLbl = new javax.swing.JLabel();
        totalEdt = new org.paccman.ui.common.AmountTextField();
        currentLbl = new javax.swing.JLabel();
        currentEdt = new org.paccman.ui.common.AmountTextField();
        differenceLbl = new javax.swing.JLabel();
        differenceEdt = new org.paccman.ui.common.AmountTextField();
        finishCancelPane = new javax.swing.JPanel();
        finishBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerSize(3);
        splitsPanel.setLayout(new java.awt.BorderLayout());

        splitsPanel.add(splitTableScrollPane, java.awt.BorderLayout.CENTER);

        splitForm.setLayout(new java.awt.BorderLayout());

        splitDataForm.setLayout(new java.awt.GridLayout(0, 2));

        categoryLbl.setText("Category");
        splitDataForm.add(categoryLbl);

        splitDataForm.add(categoryCmb);

        amountLbl.setText("Amount");
        splitDataForm.add(amountLbl);

        splitDataForm.add(amountEdt);

        noteLbl.setText("Note");
        splitDataForm.add(noteLbl);

        splitDataForm.add(noteEdt);

        splitForm.add(splitDataForm, java.awt.BorderLayout.NORTH);

        addPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        addPanel.add(addBtn);

        splitForm.add(addPanel, java.awt.BorderLayout.SOUTH);

        splitsPanel.add(splitForm, java.awt.BorderLayout.SOUTH);

        deleteBtn.setText("Delete");
        deleteBtn.setEnabled(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jToolBar1.add(deleteBtn);

        splitsPanel.add(jToolBar1, java.awt.BorderLayout.NORTH);

        jSplitPane1.setRightComponent(splitsPanel);

        statusPane.setLayout(new java.awt.BorderLayout());

        statusDataPane.setLayout(new java.awt.GridLayout(0, 2));

        totalLbl.setText("Total");
        statusDataPane.add(totalLbl);

        totalEdt.setEnabled(false);
        statusDataPane.add(totalEdt);

        currentLbl.setText("Current");
        statusDataPane.add(currentLbl);

        currentEdt.setEnabled(false);
        statusDataPane.add(currentEdt);

        differenceLbl.setText("Difference");
        statusDataPane.add(differenceLbl);

        differenceEdt.setEnabled(false);
        statusDataPane.add(differenceEdt);

        statusPane.add(statusDataPane, java.awt.BorderLayout.NORTH);

        finishCancelPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        finishBtn.setText("Finish");
        finishBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishBtnActionPerformed(evt);
            }
        });

        finishCancelPane.add(finishBtn);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        finishCancelPane.add(cancelBtn);

        statusPane.add(finishCancelPane, java.awt.BorderLayout.SOUTH);

        jSplitPane1.setLeftComponent(statusPane);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private int selectedSplitTransactionIndex = -1;
    
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        //:TODO:disbale button if no spli transaction slected: assert selectedSplitTransaction == -1: "No split transaction selected";
        if (selectedSplitTransactionIndex == -1) return; //:TODO:see above
        
        // Update current total and edits
        SplitTableModel model = (SplitTableModel)splitTable.getModel();
        SplitTransaction selectedSplitTransaction = model.getSplitTransactions().get(selectedSplitTransactionIndex);
        currentTotal = currentTotal.subtract(selectedSplitTransaction.getAmount());
        currentEdt.setValue(currentTotal);
        differenceEdt.setValue(paymentTotal.subtract(currentTotal));
        
        model.getSplitTransactions().remove(selectedSplitTransactionIndex);
        model.fireTableRowsDeleted(selectedSplitTransactionIndex, selectedSplitTransactionIndex);
    }//GEN-LAST:event_deleteBtnActionPerformed
        
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // Get category
        if (categoryCmb.getSelectedItem() == CategorySelectorComboModel.getNullElement()) {
            JOptionPane.showMessageDialog(this, "Select a category", "Input error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        CategoryBaseController cc = (CategoryBaseController)categoryCmb.getSelectedItem();
        
        // Get amount
        try {
            amountEdt.commitEdit();
        } catch (ParseException exception) {
            JOptionPane.showMessageDialog(this, "Invalid amount :TODO:", "Input error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BigDecimal amount = (BigDecimal)amountEdt.getValue();
        
        String note = noteEdt.getText();
        
        ((SplitTableModel)(splitTable.getModel())).addSplitTransaction(cc, amount, note, true);
        
        // Update current total and edits
        currentTotal = currentTotal.add(amount);
        currentEdt.setValue(currentTotal);
        differenceEdt.setValue(paymentTotal.subtract(currentTotal));
    }//GEN-LAST:event_addBtnActionPerformed
    
    private void finishBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishBtnActionPerformed
        transactionFormPanel.finishSplitForm();
        TransactionFormTab tft = Main.getMain().getTransactionFormTab();
        tft.showTransactionCard();
    }//GEN-LAST:event_finishBtnActionPerformed
    
    private void initMyComponents() {
        splitTable = new SplitTable();
        splitTableScrollPane.setViewportView(splitTable);
        splitTable.getSelectionModel().addListSelectionListener(this);
    }
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        transactionFormPanel.cancelSplitForm();
        TransactionFormTab tft = Main.getMain().getTransactionFormTab();
        tft.showTransactionCard();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    public void registerToDocumentCtrl() {
        getDocumentController().registerView(categoryCmb.getModel());
    }
    
    BigDecimal currentTotal  = BigDecimal.ZERO;
    BigDecimal paymentTotal = BigDecimal.ZERO;
    
    //:TODO:delete this function
    public void clearForm() {
    }
    
    boolean editing;
    
    public void setEditMode(boolean editing) {
        this.editing = editing;
        cancelBtn.setText(editing ? "Cancel" : "Close");
        finishBtn.setEnabled(editing);
        addBtn.setEnabled(editing);
        categoryCmb.setEnabled(editing);
        amountEdt.setEnabled(editing);
        noteEdt.setEnabled(editing);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel addPanel;
    private org.paccman.ui.common.AmountTextField amountEdt;
    private javax.swing.JLabel amountLbl;
    private javax.swing.JButton cancelBtn;
    private org.paccman.ui.transactions.split.CategorySelectorComboBox categoryCmb;
    private javax.swing.JLabel categoryLbl;
    private org.paccman.ui.common.AmountTextField currentEdt;
    private javax.swing.JLabel currentLbl;
    private javax.swing.JButton deleteBtn;
    private org.paccman.ui.common.AmountTextField differenceEdt;
    private javax.swing.JLabel differenceLbl;
    private javax.swing.JButton finishBtn;
    private javax.swing.JPanel finishCancelPane;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField noteEdt;
    private javax.swing.JLabel noteLbl;
    private javax.swing.JPanel splitDataForm;
    private javax.swing.JPanel splitForm;
    private javax.swing.JScrollPane splitTableScrollPane;
    private javax.swing.JPanel splitsPanel;
    private javax.swing.JPanel statusDataPane;
    private javax.swing.JPanel statusPane;
    private org.paccman.ui.common.AmountTextField totalEdt;
    private javax.swing.JLabel totalLbl;
    // End of variables declaration//GEN-END:variables
    
    private SplitTable splitTable;
    
    public void onNew() {
        totalEdt.setValue(BigDecimal.ZERO);
        differenceEdt.setValue(BigDecimal.ZERO);
    }

    public void valueChanged(ListSelectionEvent e) {
        //Ignore extra messages.
        if (e.getValueIsAdjusting()) return;
        
        ListSelectionModel lsm = (ListSelectionModel)e.getSource();
        
        boolean selectionEmpty = lsm.isSelectionEmpty();
        
        deleteBtn.setEnabled(editing && ! selectionEmpty);
        
        if (selectionEmpty) {
            categoryCmb.setSelectedItem(org.paccman.ui.transactions.split.CategorySelectorComboModel.getNullElement());
            noteEdt.setText("");
            amountEdt.setValue(null);
        } else {
            selectedSplitTransactionIndex = lsm.getMinSelectionIndex();
            SplitTransaction st = ((SplitTableModel)splitTable.getModel()).getSplitTransactions().get(selectedSplitTransactionIndex);
            categoryCmb.setSelectedItem(ControllerManager.getController(st.getCategory()));
            noteEdt.setText(st.getNote());
            amountEdt.setValue(st.getAmount());
        }
    }
    
}
