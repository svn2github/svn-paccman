/*
 
    Copyright (C)    2005 Joao F. (joaof@sourceforge.net)
                     http://paccman.sourceforge.net 

    This program is free software; you can redistribute it and/or modify      
    it under the terms of the GNU General Public License as published by      
    the Free Software Foundation; either version 2 of the License, or         
    (at your option) any later version.                                       

    This program is distributed in the hope that it will be useful,           
    but WITHOUT ANY WARRANTY; without even the implied warranty of            
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             
    GNU General Public License for more details.                              

    You should have received a copy of the GNU General Public License         
    along with this program; if not, write to the Free Software               
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
 
*/

package org.paccman.ui.categories;

import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import org.paccman.controller.CategoryController;
import org.paccman.ui.main.Main;
import org.paccman.ui.form.BadInputException;
import org.paccman.ui.selector.ControllerSelectionListener;
import static org.paccman.ui.main.ContextMain.*;

/**
 *
 * @author  joao
 */
public class CategoryFormTab extends javax.swing.JPanel implements ControllerSelectionListener {
    
    /**
     * Creates new form CategoryFormTab
     */
    public CategoryFormTab() {
        initComponents();
        initMyComponents();
        setEditMode(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        splitPane = new javax.swing.JSplitPane();
        jCategorySelectorPane = new javax.swing.JPanel();
        jEditNewPanel = new javax.swing.JPanel();
        jEditBtn = new javax.swing.JButton();
        jNewBtn = new javax.swing.JButton();
        treeScrollPane = new javax.swing.JScrollPane();
        categoryTree = new org.paccman.ui.categories.CategoryTree();
        jCategoryFormPane = new javax.swing.JPanel();
        jValidateCancelPanel = new javax.swing.JPanel();
        jValidateBtn = new javax.swing.JButton();
        jCancelBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jCategorySelectorPane.setLayout(new java.awt.BorderLayout());

        jEditNewPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jEditBtn.setText("Edit");
        jEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditBtnActionPerformed(evt);
            }
        });

        jEditNewPanel.add(jEditBtn);

        jNewBtn.setText("New");
        jNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNewBtnActionPerformed(evt);
            }
        });

        jEditNewPanel.add(jNewBtn);

        jCategorySelectorPane.add(jEditNewPanel, java.awt.BorderLayout.SOUTH);

        treeScrollPane.setViewportView(categoryTree);

        jCategorySelectorPane.add(treeScrollPane, java.awt.BorderLayout.CENTER);

        splitPane.setLeftComponent(jCategorySelectorPane);

        jCategoryFormPane.setLayout(new java.awt.BorderLayout());

        jValidateCancelPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jValidateBtn.setText("Validate");
        jValidateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jValidateBtnActionPerformed(evt);
            }
        });

        jValidateCancelPanel.add(jValidateBtn);

        jCancelBtn.setText("Cancel");
        jCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelBtnActionPerformed(evt);
            }
        });

        jValidateCancelPanel.add(jCancelBtn);

        jCategoryFormPane.add(jValidateCancelPanel, java.awt.BorderLayout.SOUTH);

        splitPane.setRightComponent(jCategoryFormPane);

        add(splitPane, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jValidateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jValidateBtnActionPerformed
        CategoryController validatedCategory = null;
        validatedCategory = (CategoryController) jCategoryFormPanel.onValidate();
        if ( validatedCategory != null) {
            setEditMode(false);
            if (validatedCategory == selectedCategory) {
                // Category updated
                selectedCategory.notifyChange();
            } else {
                // New category added
                getDocumentController().getDocument().addCategory(validatedCategory.getCategory());
                getDocumentController().notifyChange();
                jCategorySelectorPanel.selectCategory(validatedCategory);
            }
        } 
    }//GEN-LAST:event_jValidateBtnActionPerformed

    private void jEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditBtnActionPerformed
        jCategoryFormPanel.onEdit();
        setEditMode(true);
    }//GEN-LAST:event_jEditBtnActionPerformed

    private void jCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelBtnActionPerformed
        jCategoryFormPanel.onCancel();
        setEditMode(false);
    }//GEN-LAST:event_jCancelBtnActionPerformed

    private void jNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNewBtnActionPerformed
        jCategoryFormPanel.onNew();
        setEditMode(true);
    }//GEN-LAST:event_jNewBtnActionPerformed
    
    private boolean editing        ;
    private CategoryController selectedCategory;
    
    public void setEditMode(boolean editing) {
        this.editing = editing;
        jEditBtn.setEnabled(!editing && (selectedCategory != null)); 
        jNewBtn.setEnabled(!editing);
        jValidateBtn.setEnabled(editing);
        jCancelBtn.setEnabled(editing); 
    }
    
    public void registerToDocumentCtrl() {
        jCategorySelectorPanel.registerToDocumentCtrl();
        jCategoryFormPanel.registerToDocumentCtrl();
        categoryTree.getModel().registerToDocumentCtrl();
        categoryTree.registerToDocumentCtrl();
    }
    
    private void initMyComponents() {
        jCategorySelectorPanel = new CategorySelectorPanel();
        jCategorySelectorPane.add(jCategorySelectorPanel, BorderLayout.NORTH);
        
        jCategoryFormPanel    = new CategoryFormPanel();
        jCategoryFormPane.add(jCategoryFormPanel, BorderLayout.NORTH);
        
        jCategorySelectorPanel.addListener(this);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.paccman.ui.categories.CategoryTree categoryTree;
    private javax.swing.JButton jCancelBtn;
    private javax.swing.JPanel jCategoryFormPane;
    private javax.swing.JPanel jCategorySelectorPane;
    private javax.swing.JButton jEditBtn;
    private javax.swing.JPanel jEditNewPanel;
    private javax.swing.JButton jNewBtn;
    private javax.swing.JButton jValidateBtn;
    private javax.swing.JPanel jValidateCancelPanel;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JScrollPane treeScrollPane;
    // End of variables declaration//GEN-END:variables
    
    private CategorySelectorPanel jCategorySelectorPanel;
    private CategoryFormPanel     jCategoryFormPanel    ;
    
    public void controllerSelected(org.paccman.controller.Controller categoryCtrl) {
        assert( ! editing );
        jCategoryFormPanel.onSelect(categoryCtrl);
        selectedCategory = (CategoryController)categoryCtrl;
        jEditBtn.setEnabled(true);
    }

    public boolean selectionEnabled() {
        if (editing) JOptionPane.showMessageDialog(this, "SELECTION DISABLE :TODO:"); 
        return ! editing;
    }

}
