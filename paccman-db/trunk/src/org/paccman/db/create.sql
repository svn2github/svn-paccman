CREATE TABLE OBJ_PAYEES(
    PAYEE_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    NAME VARCHAR(100)
);

CREATE TABLE OBJ_PAYMENT_TYPES (
    PAYMENT_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    NAME VARCHAR(100)
);

CREATE TABLE OBJ_BANKS (
    BANK_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    NAME VARCHAR(100) NOT NULL,
    AGENCY VARCHAR(1024),
    ADDRESS_NUMBER VARCHAR(1024),
    ADDRESS_LINE1 VARCHAR(1024),
    ADDRESS_LINE2 VARCHAR(1024),
    ADDRESS_CITY VARCHAR(1024),
    ADDRESS_ZIP VARCHAR(1024),
    ADDRESS_COUNTRY VARCHAR(1024),
    TELEPHONE VARCHAR(1024),
    FAX VARCHAR(1024),
    INTERNET VARCHAR(1024),
    EMAIL VARCHAR(1024)
);

CREATE TABLE OBJ_CATEGORIES (
    CATEGORY_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
);

CREATE TABLE OBJ_ACCOUNTS (
    ACCOUNT_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    BANK_ID BIGINT NOT NULL,
    INITAL_BALANCE DECIMAL(20,10) NOT NULL,
    ACCOUNT_NUMBER VARCHAR(1024) NOT NULL,
    ACCOUNT_NUMBER_KEY VARCHAR(1024),
    NOTE VARCHAR(1024),
    LAST_RECONCILIATION_DATE TIMESTAMP,
    LAST_RECONCILIATION_BALANCE DECIMAL(20,10) NOT NULL,
    PENDING_RECONCILAITION CHAR FOR BIT DATA,
    PENDING_RECONCILIATION_DATE TIMESTAMP,
    PENDING_RECONCILIATION_BALANCE DECIMAL(20,10) NOT NULL,
    HOLDER_NAME VARCHAR(1024),
    HOLDER_ADDRESS VARCHAR(1024),

    CONSTRAINT ACCOUNT__BANK_FK FOREIGN_KEY(BANK_ID) REFERENCES OBJ_BANKS(BANK_ID)
);

CREATE TABLE OBJ_TRANSACTIONS (
    TRANSACTION_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    AMOUNT DECIMAL(20,10) NOT NULL,
    VALUE_DATE TIMESTAMP NOT NULL,
    TRANSACTION_DATE TIMESTAMP NOT NULL,
    NOTE VARCHAR(1024),
    LABEL VARCHAR(1024),
    RECONCILIATION_STATE CHAR(1) NOT NULL DEFAULT 'U',
            -- 'U': unreconciled
            -- 'M': marked
            -- 'R': reconciled
    RECONCILIATION_DATE TIMESTAMP,
    ACCOUNT_ID BIGINT NOT NULL,

    CONSTRAINT TRANSACTION__ACCOUNT_FK FOREIGN_KEY(ACCOUNT_ID) REFERENCES OBJ_ACCOUNTS(ACCOUNT_ID),
    CONSTRAINT RECONCILIATION_VALID_CONSTRAINT CHECK(RECONCILIATION_STATE IN ('U', 'M', 'R'))
);

CREATE TABLE OBJ_SCHED_TRANSACTIONS (
    SCHED_TRANSACTION_ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    NAME VARCHAR(1024) NOT NULL, 
    DESCRIPTION VARCHAR(1024) NOT NULL, 
    PERIOD INTEGER NOT NULL,
    PERIOD_UNIT CHAR(1) NOT NULL,
            -- 'D': day
            -- 'W': week
            -- 'M': month
            -- 'Y': year
    NEXT_OCCURENCE TIMESTAMP NOT NULL,
    AUTOMATIC CHAR FOR BIT DATA NOT NULL,
    FIXED_AMOUNT CHAR FOR BIT DATA NOT NULL,
    SCHED_DAYS INTEGER NOT NULL, -- number of days between the registration of the transaction and the scheduled date of the transaction

    CONSTRAINT PERIOD_UNIT_VALID_CONSTRAINT CHECK(PERIOD_UNIT IN ('D', 'W', 'M', 'Y'))
);

CREATE TABLE OBJ_SCHED_SIMPLE_PAYMENTS (
    SCHED_TRANSACTION_ID BIGINT NOT NULL,

    CONSTRAINT SCHED_SIMPLE_PAYMENT__SCHED_TRANSACTION_FK FOREIGN_KEY(SCHED_TRANSACTION_ID) REFERENCES OBJ_SCHED_TRANSACTIONS(SCHED_TRANSACTION_ID)
);

CREATE TABLE OBJ_SCHED_SPLIT_PAYMENTS (
    SCHED_TRANSACTION_ID BIGINT NOT NULL,

    CONSTRAINT SCHED_SPLIT_PAYMENT__SCHED_TRANSACTION_FK FOREIGN_KEY(SCHED_TRANSACTION_ID) REFERENCES OBJ_SCHED_TRANSACTIONS(SCHED_TRANSACTION_ID)
);

CREATE TABLE OBJ_SCHED_TRANSFER_PAYMENTS (
    SCHED_TRANSACTION_ID BIGINT NOT NULL,

    CONSTRAINT SCHED_TRANSFER_PAYMENT__SCHED_TRANSACTION_FK FOREIGN_KEY(SCHED_TRANSACTION_ID) REFERENCES OBJ_SCHED_TRANSACTIONS(SCHED_TRANSACTION_ID)
);

    
CREATE TABLE OBJ_PAYEMENTS (
    TRANSACTION_ID BIGINT NOT NULL,
    PAYEE_ID BIGINT BIGINT NOT NULL,
    PAYMENT_TYPE_ID BIGINT NOT NULL,

    CONSTRAINT PAYEMENT__TRANSACTION_FK FOREIGN_KEY(TRANSACTION_ID) REFERENCES OBJ_TRANSACTIONS(TRANSACTION_ID),
    CONSTRAINT PAYEMENT__PAYEE_FK FOREIGN_KEY(PAYEE_ID) REFERENCES OBJ_PAYEES(PAYEE_ID),
    CONSTRAINT PAYEMENT__PAYEMNT_TYPE_FK FOREIGN_KEY(PAYEMENT_ID) REFERENCES OBJ_PAYEMENT_TYPES(PAYEMENT_ID)
);

CREATE TABLE OBJ_SIMPLE_PAYEMENTS (
    TRANSACTION_ID BIGINT NOT NULL,
    CATEGORY_ID BIGINT NOT NULL,

    CONSTRAINT SIMPLE_PAYEMENT__TRANSACTION_FK FOREIGN_KEY(TRANSACTION_ID) REFERENCES OBJ_TRANSACTIONS(TRANSACTION_ID),
    CONSTRAINT SIMPLE_PAYEMENT__CATEGORY_FK FOREIGN_KEY(CATEGORY_ID) REFERENCES OBJ_CATEGORIES(CATEGORY_ID)
);

CREATE TABLE OBJ_SPLIT_PAYEMENTS (
    TRANSACTION_ID BIGINT NOT NULL,

    CONSTRAINT SPLIT_PAYEMENT__TRANSACTION_FK FOREIGN_KEY(TRANSACTION_ID) REFERENCES OBJ_TRANSACTIONS(TRANSACTION_ID),
);

