/*
 * This file is part of paccman.
 *
 * paccman is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * paccman is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with paccman.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package net.sf.paccman.ui.assistant;

import net.sf.paccman.db.PaccmanDatabaseMgr;

/**
 *
 * @author joaof (joaof at sourceforge.net)
 */
public class IntroPanel extends javax.swing.JPanel {

    /** Creates new form IntroPanel */
    public IntroPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        selectBtnGrp = new javax.swing.ButtonGroup();
        paccmanDatabaseMgr = PaccmanDatabaseMgr.getInstance();
        createNewAccountFolderRb = new javax.swing.JRadioButton();
        openAccountFolderRb = new javax.swing.JRadioButton();
        accountFolderListScrollPane = new javax.swing.JScrollPane();
        accountFolderList = new javax.swing.JList();
        alwaysOpenSelectedChb = new javax.swing.JCheckBox();

        setName("Form"); // NOI18N

        selectBtnGrp.add(createNewAccountFolderRb);
        createNewAccountFolderRb.setSelected(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(net.sf.paccman.ui.PaccmanuiApp.class).getContext().getResourceMap(IntroPanel.class);
        createNewAccountFolderRb.setText(resourceMap.getString("createnewaccountfolder.text")); // NOI18N
        createNewAccountFolderRb.setName("createNewAccountFolderRb"); // NOI18N

        selectBtnGrp.add(openAccountFolderRb);
        openAccountFolderRb.setText(resourceMap.getString("openaccountfolder.text")); // NOI18N
        openAccountFolderRb.setName("openAccountFolderRb"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, paccmanDatabaseMgr, org.jdesktop.beansbinding.ELProperty.create("${!empty databases}"), openAccountFolderRb, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        accountFolderListScrollPane.setName("accountFolderListScrollPane"); // NOI18N

        accountFolderList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        accountFolderList.setName("accountFolderList"); // NOI18N

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${databases}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, paccmanDatabaseMgr, eLProperty, accountFolderList);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        bindingGroup.addBinding(jListBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, openAccountFolderRb, org.jdesktop.beansbinding.ELProperty.create("${selected ? selectedElement : null}"), accountFolderList, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, openAccountFolderRb, org.jdesktop.beansbinding.ELProperty.create("${selected}"), accountFolderList, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        accountFolderListScrollPane.setViewportView(accountFolderList);

        alwaysOpenSelectedChb.setText(resourceMap.getString("alwaysopen.text")); // NOI18N
        alwaysOpenSelectedChb.setName("alwaysOpenSelectedChb"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, accountFolderList, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), alwaysOpenSelectedChb, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(accountFolderListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(openAccountFolderRb, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(createNewAccountFolderRb, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(alwaysOpenSelectedChb, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createNewAccountFolderRb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openAccountFolderRb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountFolderListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alwaysOpenSelectedChb)
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList accountFolderList;
    private javax.swing.JScrollPane accountFolderListScrollPane;
    private javax.swing.JCheckBox alwaysOpenSelectedChb;
    private javax.swing.JRadioButton createNewAccountFolderRb;
    private javax.swing.JRadioButton openAccountFolderRb;
    private net.sf.paccman.db.PaccmanDatabaseMgr paccmanDatabaseMgr;
    private javax.swing.ButtonGroup selectBtnGrp;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
