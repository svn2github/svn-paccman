/*
 * Table.java
 *
 * Created on 6 d√©cembre 2005, 13:48
 */

package org.paccman.ui.common.table;

import java.util.prefs.Preferences;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableColumnModelListener;
import javax.swing.table.TableColumn;
import org.paccman.ui.common.table.renderer.TableCellRenderer;

/**
 *
 * @author  jfer
 */
public class Table extends javax.swing.JTable implements TableColumnModelListener  {
    
    /** Creates new form BeanForm */
    public Table() {
        initComponents();

        setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        getColumnModel().addColumnModelListener(this);
    }
    
    private void adjustRowHeight(TableCellRenderer renderer) {
        if (rowHeight < renderer.getMinimumSize().height) {
            rowHeight = renderer.getMinimumSize().height;
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setShowHorizontalLines(false);
        setShowVerticalLines(false);
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    boolean isAdjustingColumnWidth = false;
    private final String preferencePostfix = "SIZE";
    
    private void adjustColumnWidth(TableColumn column, String name) {

        isAdjustingColumnWidth = true;
        
        Preferences prefs = Preferences.userNodeForPackage(getClass());
        
        int defaultWidth = getWidth()/getColumnModel().getColumnCount();
        int width = prefs.getInt(name, defaultWidth);
        column.setPreferredWidth(width);
        
        isAdjustingColumnWidth = false;
    }

    /**
     * Setter for property tableModel.
     * @param tableModel New value of property tableModel.
     */
    public void setModel(javax.swing.table.TableModel model) {
        super.setModel(model);
        javax.swing.table.TableModel old = getModel();
        if (model instanceof TableModel) {

            TableModel tableModel = (TableModel)model;
            for (int i = 0 ; i < tableModel.getColumnDescriptors().length ; i++) {
                TableModel.ColumnDescriptor cd = tableModel.getColumnDescriptors()[i];
                getColumnModel().getColumn(i).setCellRenderer(cd.getRenderer());
                adjustRowHeight(cd.getRenderer());
                String colSizePreferenceName = cd.getPrefId() + preferencePostfix;
                adjustColumnWidth(getColumnModel().getColumn(i), colSizePreferenceName);
            }
        }
        firePropertyChange("model", old, model);

    }

    public void columnMarginChanged(javax.swing.event.ChangeEvent e) {
        if (isAdjustingColumnWidth) {
            return;
        }
        int colWidth;
        
        Preferences prefs = Preferences.userNodeForPackage(getClass());
        
        TableModel model = (TableModel)getModel();
        for (int i = 0 ; i < model.getColumnDescriptors().length ; i++) {
            TableModel.ColumnDescriptor cdp = model.getColumnDescriptor(i);

            colWidth = getColumnModel().getColumn(i).getWidth();
            String prefName = cdp.getPrefId() + preferencePostfix;
            prefs.putInt(prefName, colWidth);
        }

        super.columnMarginChanged(e);
    }
    
}
